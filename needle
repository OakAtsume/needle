#!/bin/ruby

print("
                                   █████ ████
                                  ░░███ ░░███
  ████████    ██████   ██████   ███████  ░███   ██████
 ░░███░░███  ███░░███ ███░░███ ███░░███  ░███  ███░░███
  ░███ ░███ ░███████ ░███████ ░███ ░███  ░███ ░███████
  ░███ ░███ ░███░░░  ░███░░░  ░███ ░███  ░███ ░███░░░
  ████ █████░░██████ ░░██████ ░░████████ █████░░██████
  ░░░░ ░░░░░  ░░░░░░   ░░░░░░   ░░░░░░░░ ░░░░░  ░░░░░░
  [Needle v.3.0.0], [Ruby v.#{RUBY_VERSION}] [By Oak Atsume]\n
")

if ARGV.empty?
  puts "Usage: needle {Options},\nOptions: \nneedle replace : Find and replace all matches in a file\n>>> needle replace 'find-and-replace-me' 'replace-to-this' {file}\n"
  puts "needle inject 'file1' 'file2' {additional-options}\n>>> needle inject 'code.txt' 'target-file.sh'"
  puts ">>> needle inject 'file1' 'file2' replace 'value1' 'value2'"
  exit 2
end

case ARGV[0]
when "replace"
  if ARGV[1].nil? || ARGV[2].nil? || ARGV[3].nil?
    puts "Usage: needle replace 'find-and-replace-me' 'replace-to-this' {file}"
    exit 2
  end
  if File.exists?(ARGV[3]) && File.file?(ARGV[3])
    puts "Replacing all instances of '#{ARGV[1]}' with '#{ARGV[2]}' in #{ARGV[3]}..."
    data = File.read(ARGV[3])
    out = ""
    data.each_line do |line|
      if line.include? ARGV[1]
        line.gsub!(ARGV[1], ARGV[2])
        puts("Replaced '#{ARGV[1]}' with '#{ARGV[2]}' Line: #{line}:#{line.length}}")
      end
      out << line
    end
    File.write(ARGV[3], out)
    puts "Successfully replaced all instances of '#{ARGV[1]}' with '#{ARGV[2]}' in #{ARGV[3]}!"
  end
when "inject"
  if ARGV[1].nil? || ARGV[2].nil?
    puts "Usage: needle inject 'file1' 'file2' {additional-options}"
    exit 2
  end
  # Check if file exists #
  if !File.file?(ARGV[1])
    puts "File '#{ARGV[1]}' does not exist!"
    exit 2
  end
  if !File.file?(ARGV[2])
    puts "File '#{ARGV[2]}' does not exist!"
    exit 2
  end
  puts "Injecting '#{ARGV[1]}' into '#{ARGV[2]}'"
  if ARGV[3] == "replace"
    if ARGV[4].nil? || ARGV[5].nil?
      puts "Usage: needle inject 'file1' 'file2' replace 'value1' 'value2'"
      exit 2
    end
    puts "> Replacing '#{ARGV[4]}' with '#{ARGV[5]}'"
    code = File.read(ARGV[1])
    out = ""
    code.each_line do |line|
      if line.include? ARGV[4]
        line.gsub!(ARGV[4], ARGV[5])
        puts("Replaced '#{ARGV[4]}' with '#{ARGV[5]}' Line: #{line}:#{line.length}}")
      end
      out << line
    end

    target = File.read(ARGV[2])
    File.open(ARGV[2], "w") do |f|
      f.write(target)
      f.write(out)
    end
    puts "Successfully replaced all instances of '#{ARGV[4]}' with '#{ARGV[5]}' in #{ARGV[1]}!"
  else
    puts "> No additional options"
    code = File.read(ARGV[1])
    target = File.read(ARGV[2])
    File.open(ARGV[2], "w") do |f|
      f.write(target)
      f.write(code)

    end
  end
end
